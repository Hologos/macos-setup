#! /usr/bin/env bash

set -uo pipefail

DEBUG=0
arg_1=""

if [[ ${#} -eq 1 ]]; then
    arg_1="${1}"
fi

if [[ "${arg_1}" == "-h" ]] || [[ "${arg_1}" == "--help" ]]; then
    >&2 echo
    >&2 echo "    -d | --debug"
    >&2 echo "        Don't do anything, just print info."
    exit 1
elif [[ "${arg_1}" == "-d" ]] || [[ "${arg_1}" == "--debug" ]]; then
    DEBUG=1
fi

function fix_link() {
    local line="${1}"

    local target="${line// -> */}"
    local broken_source="${line//* -> /}"
    local fixed_source="${broken_source//\/Users\/${old_username}//Users/${new_username}}"

    if [[ ${DEBUG} -eq 1 ]]; then
        echo "line=[${line}]"
        echo
        echo "       target=[${target}]"
        echo "broken_source=[${broken_source}]"
        echo " fixed_source=[${fixed_source}]"
        echo
        echo "ln -nfs \"${fixed_source}\" \"${target}\""
    fi

    if [[ ${DEBUG} -eq 0 ]]; then
        echo "Fixing ${target} -> ${fixed_source} (${broken_source})"
        ln -nfs "${fixed_source}" "${target}"
    fi

    if [[ ${DEBUG} -eq 1 ]]; then
        echo
        echo
    fi
}

old_username="malekjir"
new_username="hologos"

dirs_to_scan=()
dirs_to_scan+=("${HOME}/Work")
dirs_to_scan+=("${HOME}/Scripts")
dirs_to_scan+=("${HOME}/Projects")
dirs_to_scan+=("${HOME}/KB")
dirs_to_scan+=("${HOME}/Software")

for dir_to_scan in "${dirs_to_scan[@]}"; do
    OLDIFS="${IFS}"
    IFS=$'\n'

    for line in $(find "${dir_to_scan}" -type l ! -exec test -e {} \; -ls | grep "${old_username}" | tr -s ' ' | cut -d ' ' -f 11-); do
        fix_link "${line}"
    done

    IFS="${OLDIFS}"
done

